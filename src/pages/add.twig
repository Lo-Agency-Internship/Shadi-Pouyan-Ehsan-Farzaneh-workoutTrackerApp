{% extends "./layouts/main.twig" %}

{% import "./macros/main.twig" as main %}

{% block scripts %}
    <script>
        function excercise(){
            return{
                taskName:'',
                subTaskName:'',
                show:false,
                roundRange:'',
                timeRange:'',
                description:'',
                newSubTask:'',
				exerciseDate:'',
				taskId:'',
                toggleShowAndSaveExercise(event) {
					
                    event.preventDefault();
                    this.show = ! this.show;

                    if(this.taskName===''){
                        const ButtonValues = event.target.getAttribute('value')
						this.taskName = ButtonValues.split(",")[0]
						this.subTaskName = ButtonValues.split(",")[1]
                    }
                    else{
                        this.taskName=''
                        this.subTaskName=''
                    }},

                finalSave(event) {
                    event.preventDefault();
					
					let data = {taskName: this.taskName,
								subTaskName: this.subTaskName,
								roundRange: this.roundRange,
								timeRange: this.timeRange,
								description: this.description,
								userId: this.userId,
								exerciseDate: this.exerciseDate
								};
					document.getElementById('timeRange').value = ''
					document.getElementById('timeRange2').value = '30'
					document.getElementById('roundRange').value = ''
					document.getElementById('roundRange2').value = '50'
					document.getElementById('Description').value = ''
					alert("your exercise is saved\nview it in your homepage")
					fetch("/add/api", {
					method: "POST",
					headers: {'Content-Type': 'application/json'}, 
					body: JSON.stringify(data),
					})
					
                },
                SaveNewSubExercise(event,id) {
					event.preventDefault();
					let data = {newSubTask: this.newSubTask,
								taskId: id
					}
					
					fetch("/add/sub/api", {
					method: "POST",
					headers: {'Content-Type': 'application/json'}, 
					body: JSON.stringify(data),
					}).then(window.location.assign("../add"))
                }
				
            }
        }
    </script>
{% endblock %}
	
{% block content %}

		<section class="container" id="add/edit" x-data="excercise()">
			<div class="row">
				<!-- =======================CATEGORIES========================================== -->
				<!-- ============================================================================= -->
				<div class="col-lg-6"> <p class=" text-center m-2 text-bolder bg-info m-1 p-1 rounded">Choose One Category</p>
					<!-- accordions starts here-->
					<!-- ============================================================================= -->
					<div class="accordion" id="chapters">
	
						<!-- accordion-->
						
						<!-- ======================================================================= -->
						{% for exercise in exercises %}
							{{main.accordionItem(exercise.taskName)}}
								{% for subExercise in subExercises %}
									{% if exercise.id == subExercise.taskId %}	
										{{ main.accordionItem2(
												[	
													{		
													value: subExercise.subTaskName
													}
												]
											)
										}}
									{% endif %}
								{% endfor %}
								{{main.accordionItem3(exercise.id)}}
						{% endfor %}
        
					</div>
				</div>
					<!-- =======================END OF CATEGORIES accordions ========================================== -->
				<div
					class="col-lg-6 bg-secondary">
					<!-- =======================start of getting time and rounds========================================== -->
	
					<div class="justify-content-center align-center m-2">
						<form x-show='show' class="bg-info m-2 p-5 rounded">
							<label for="roundRange" class="form-label fw-bold">Number Of rounds</label>
							<input type="range" class="form-range" id="roundRange" value="10" min="1" max="100" oninput="this.nextElementSibling.value = this.value" x-model="roundRange">
							<output id="roundRange2">50</output>&nbsp round(s)
							<hr>
							<label for="timeRange" class="form-label fw-bold">Duration Of rounds</label>
							<input type="range" class="form-range" id="timeRange" value="5" min="1" max="60" oninput="this.nextElementSibling.value = this.value" x-model="timeRange">
							<output id="timeRange2">30</output>&nbsp minutes(s)
							<hr>
							<label for="exerciseDate" class="form-label fw-bold">Exercise Date</label>
							<input type="date" x-model="exerciseDate">
							

							<div class="input-group w-100">
								<div class="form-group w-100">
									<hr>
									<label for="Description" class="fw-bold mb-2">Description</label>
									<textarea class="form-control w-100 mt-1" id="Description" rows="5" x-model="description"></textarea>
								</div>
							</div>
							<br>
							<button class="btn btn-secondary btn-lg" @click="finalSave($event)" x-bind:disabled="description===''">save</button>
						</form>
					</div>
	
					<!-- =======================end of getting time and rounds========================================== -->
				</div>
			</div>
		</section>
	{% endblock %}